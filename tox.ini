[tox]
envlist = py3{6,7,8,9}-build
skip_missing_interpreters = true
skipsdist = true

[base]
setenv =
    {abc,tests}: CFLAGS=-O2 -g -DNDEBUG
    {abc,tests}: CXXFLAGS={env:CFLAGS:-O2 -g -DNDEBUG}
    {abc,tests}: LDFLAGS={env:CFLAGS:-O2 -g -DNDEBUG}
    {build}: PREFIX={env:PREFIX:./install}

passenv =
    CC
    CXX
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    XDG_*
    GITHUB*
    PIP_DOWNLOAD_CACHE

[testenv]
envdir = {toxinidir}/.env
skip_install = true

setenv =
    {abc,tests}: {[base]setenv}
    {build}:  {[base]setenv}

passenv =
    {[base]passenv}

whitelist_externals =
    {abc,tests,lint,build,clang,ctest,grind,unbuild}: bash
    {abc,tests,clean}: make
    {build,clang}: mkdir

changedir =
    {build,clang}: build

deps =
    {abc,tests,lint,build,clang,ctest,grind}: pip>=21.3
    {abc,tests}: this-cli
    {build,clang,ctest,grind}: cmake
    {build,clang,ctest,grind}: ninja
    lint: cpplint
    grind: ValgrindCI

commands_pre =
    {build,clang}: mkdir -p {toxinidir}/build

commands =
    abc: make -j4 ABC_USE_NO_CUDD=1 ABC_USE_PIC=1 {posargs:'ABC_USE_NAMESPACE=xxx'} abc
    tests: make -j4 ABC_USE_NO_CUDD=1 ABC_USE_PIC=1 {posargs:'ABC_USE_NAMESPACE=xxx'} test
    clang: bash -c 'cmake -G {posargs:"Unix Makefiles"} -DABC_USE_NAMESPACE=xxx -DCMAKE_TOOLCHAIN_FILE=../tools/clang_toolchain.cmake ..'
    build: bash -c 'cmake -G {posargs:"Unix Makefiles"} -DABC_USE_NAMESPACE=xxx -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$PREFIX ..'
    {build,clang}: bash -c 'cmake --build . --target abc -j $(nproc)'
    {build,clang}: bash -c 'ctest -V --test-dir ./'
    build: cmake --build . --target install
    ctest: bash -c 'ctest -j $(nproc) --build-generator {posargs:"Ninja"} --build-and-test . build --build-options -DABC_USE_NAMESPACE=xxx -DCMAKE_BUILD_TYPE=Debug --test-command ctest --rerun-failed --output-on-failure -V'
    lint: bash -c 'cpplint --output=gsed {toxinidir}/src/base/main/* {toxinidir}/lib/*'
    grind: bash -c 'cmake -G {posargs:"Ninja"} -S . -B build -DABC_USE_NAMESPACE=xxx -DCMAKE_BUILD_TYPE=Debug'
    grind: bash -c 'cmake --build build --target abc -j $(nproc)'
    grind: bash -c 'valgrind --tool=memcheck --xml=yes --xml-file=abc_check.xml --leak-check=full --show-leak-kinds=definite,possible --error-exitcode=127 ./build/src/base/main/abc "-c" "r i10.aig; b; ps; b; rw -l; rw -lz; b; rw -lz; b; ps; cec"'
    grind: valgrind-ci abc_check.xml --number-of-errors
    grind: valgrind-ci abc_check.xml --summary
    unbuild: bash -c 'rm -rf build/ abc_check.xml'
    clean: make clean
